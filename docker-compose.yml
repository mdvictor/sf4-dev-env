version: '3.7'
services:
    db:
        image: mysql
        container_name: sf4dev_db
        command: ["--default-authentication-plugin=mysql_native_password"]
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: symfony
            MYSQL_USER: symfony
            MYSQL_PASSWORD: symfony

    php:
        build:
            context: ./php-fpm
            dockerfile: Dockerfile
            args:
                UID: 1000
                GID: 1000    
        container_name: sf4dev_php
        ports:
            - "9000:9001"
        volumes:
            - ./projects:/var/www/projects
            - ./logs/symfony:/var/www/logs/symfony:rw,cached
        links:
            - db
        extra_hosts:
            - "docker-host.localhost:127.0.0.1"
        env_file:
            - ./container-preparation.env

    nginx:
        build: ./nginx
        container_name: sf4dev_nginx
        ports:
            - "80:80"
        links:
            - php
        volumes:
            - ./logs/nginx:/var/log/nginx:cached
            - ./projects:/var/www/projects:cached

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: sf4dev_phpmyadmin
        environment:
         - PMA_HOST=db
        restart: always
        ports:
         - 8080:80
        volumes:
         - /sessions

    elasticsearch:
        build:
          context: elasticsearch/
          args:
            ELK_VERSION: $ELK_VERSION
        container_name: sf4dev_elasticsearch    
        volumes:
          - type: bind
            source: ./elasticsearch/config/elasticsearch.yml
            target: /usr/share/elasticsearch/config/elasticsearch.yml
            read_only: true
          - type: volume
            source: elasticsearch
            target: /usr/share/elasticsearch/data
        ports:
          - "9200:9200"
          - "9300:9300"
        environment:
          ES_JAVA_OPTS: "-Xmx256m -Xms256m"
          ELASTIC_PASSWORD: sfdev
        networks:
          - elk

    logstash:
        build:
          context: logstash/
          args:
            ELK_VERSION: $ELK_VERSION
        container_name: sf4dev_logstash
        volumes:
          - type: bind
            source: ./logstash/config/logstash.yml
            target: /usr/share/logstash/config/logstash.yml
            read_only: true
          - type: bind
            source: ./logstash/pipeline
            target: /usr/share/logstash/pipeline
            read_only: true
        ports:
          - "5000:5000"
          - "9600:9600"
        environment:
          LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        networks:
          - elk
        depends_on:
          - elasticsearch

    kibana:
        build:
          context: kibana/
          args:
            ELK_VERSION: $ELK_VERSION
        container_name: sf4dev_kibana    
        volumes:
          - type: bind
            source: ./kibana/config/kibana.yml
            target: /usr/share/kibana/config/kibana.yml
            read_only: true
        ports:
          - "5601:5601"
        networks:
          - elk
        depends_on:
          - elasticsearch

    filebeat:
        hostname: filebeat
        container_name: sf4dev_filebeat
        image: docker-logs-elk/filebeat:1.0.0
        build:
          context: filebeat
          dockerfile: Dockerfile
        volumes:
         - "./logs/symfony:/var/www/symfony/logs:ro"
        networks:
           - elk    
        ports:
          - "5044:5044"

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:     
